.hidden {
	display: none;
}

.primary-editor {
	font-family: var(--font-family);
	font-size: var(--font-size);
	position: relative;
	word-wrap: break-word;
	white-space: break-spaces;
	word-break: break-word;
	overflow-wrap: break-word;
	-webkit-font-variant-ligatures: none;
	font-variant-ligatures: none;
	font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
	outline: none;

	& > p, h1, h2, h3, h4, h5, h6, pre, blockquote, .tableWrapper {
		position: relative;

		&:before {
			position: absolute;
			width: 64px;
			height: 85%;
			margin-left: -64px;
			content: "";
		}
	}

	ul, ol {
		padding-left: 2rem;

		li {
			position: relative;
			line-height: 1.5;

			& > p, & > ol, & > ul {
				margin: 0;
			}
		}
	}

	hr {
		border: 0;
		background-color: var(--fill-quarternary);
		height: 2px;

		&.ProseMirror-selectednode {
			background-color: var(--accent-blue30);
		}
	}

	img {
		display: inline !important;
		border: none !important;
		margin: 0 !important;

		&:not(.ProseMirror-separator) {
			width: 100%;
			display: block;
		}
	}

	p, h1, h2, h3, h4, h5, h6 {
		color: var(--fill-primary);
	}

	blockquote {
		margin-top: 1.5em;
		margin-bottom: 1.5em;
		margin-left: 1em;
		padding-left: .75em;
		border-left: 3px solid lightblue;
	}

	pre {
		white-space: pre-wrap;
		padding: 0.7rem 1rem;
		border-radius: 5px;
		background: var(--fill-quinary);
		font-size: 0.9em;
	}

	p code {
		padding: 0.2rem 0.4rem;
		border-radius: 5px;
		font-size: 0.9em;
		background: var(--fill-quarternary);
	}

	// Prevent `sub` and `sup` elements from affecting the line height in all browsers.
	sub, sup {
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}

	sub {
		bottom: -0.25em;
	}

	sup {
		top: -0.5em;
	}

	.tableWrapper {
		margin: 1em 0;

		table {
			border-collapse: collapse;
			width: 100%;
			margin: 0;
			border: 1px solid #cccccc;
			border-top: 0;

			td, th {
				min-width: 1em;
				border: 1px solid #cccccc;
				padding: 3px 5px;
				vertical-align: top;
				box-sizing: border-box;
				position: relative;

				// In newer Firefox versions wrapping works without breaking all words
				word-break: break-all;

				> * {
					margin-bottom: 0;
				}

				*:first-child {
					margin-top: 0;
				}

				*:last-child {
					margin-bottom: 0;
				}
			}

			th {
				font-weight: bold;
				text-align: left;
			}

			// prosemirror-tables
			.selectedCell:after {
				z-index: 2;
				position: absolute;
				content: "";
				left: 0;
				right: 0;
				top: 0;
				bottom: 0;
				background-color: var(--accent-blue10);
				pointer-events: none;
			}
		}
	}

	.citation {
		cursor: default;

		&.selected, &:hover {
			background-color: var(--accent-blue10);
		}

		&.ProseMirror-selectednode {
			background-color: var(--fill-quinary);
		}
	}

	.empty-node {
		&::before {
			position: absolute;
			color: var(--fill-tertiary);
			cursor: text;
		}

		&:first-child::before {
			content: attr(data-placeholder)
		}
	}

	.find {
		background-color: yellow;
		color: #000000;
	}

	.find-selected {
		background-color: var(--accent-blue50);
	}
}

/* rtl:begin:ignore */
.primary-editor {
	& > p, h1, h2, h3, h4, h5, h6, pre, blockquote, table {
		&[dir=rtl]:before {
			display: none;
		}
	}
}
/* rtl:end:ignore */

.ProseMirror-hideselection *::selection {
	background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
	background: transparent;
}

.ProseMirror-hideselection {
	caret-color: transparent;
}

// Override inline padding which is only used for the
// back-compatibility with the TinyMCE
p, h1, h2, h3, h4, h5, h6 {
	padding-left: 0 !important;
	padding-right: 0 !important;
}

$max-indent-level: 7;
$indent-width: 30;

@for $i from 1 through $max-indent-level {
	[data-indent='#{$i}']:not([dir]) {
		padding-left: ($indent-width * $i) + px !important;
	}
}

/* rtl:begin:ignore */
@for $i from 1 through $max-indent-level {
	[dir='ltr'][data-indent='#{$i}'] {
		padding-left: ($indent-width * $i) + px !important;
	}
}

@for $i from 1 through $max-indent-level {
	[dir='rtl'][data-indent='#{$i}'] {
		padding-right: ($indent-width * $i) + px !important;
	}
}
/* rtl:end:ignore */

// prosemirror-gapcursor
.ProseMirror-gapcursor {
	display: none;
	pointer-events: none;
	position: absolute;
}

.ProseMirror-gapcursor:after {
	content: "";
	display: block;
	position: absolute;
	top: -2px;
	width: 20px;
	border-top: 1px solid red;
	animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}

.ProseMirror-focused .ProseMirror-gapcursor {
	display: block;
}

// prosemirror-dropcursor
.prosemirror-dropcursor-block {
	background-color: var(--fill-primary) !important;
}

.prosemirror-dropcursor-inline {
	background-color: var(--fill-primary) !important;
}

.primary-editor {
	p {
		line-height: 1.5;
	}

	h1 {
		font-size: 1.2em;
	}

	h2 {
		font-size: 1.1em;
	}

	h3 {
		font-size: 1em;
	}

	h4 {
		font-size: 0.9em;
	}

	h5 {
		font-size: 0.8em;
	}

	h6 {
		font-size: 0.7em;
	}
}

.drag-handle {
	position: absolute;
	width: 24px;
	height: 24px;
	z-index: 99;
	background-image: url('data:image/svg+xml,<svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill="%23777"><circle cx="9" cy="6" r="1"/><circle cx="14" cy="6" r="1"/><circle cx="9" cy="10" r="1"/><circle cx="9" cy="14" r="1"/><circle cx="9" cy="18" r="1"/><circle cx="14" cy="10" r="1"/><circle cx="14" cy="14" r="1"/><circle cx="14" cy="18" r="1"/></svg>');
	background-repeat: no-repeat;
	background-position: top 1px left;
	cursor: grab;
}

.ProseMirror-selectednode {
	background-color: var(--fill-quinary);
	border-radius: 4px;
	outline: none;
}

/* rtl:begin:ignore */
li:after {
	position: absolute;
	top: 0;
	margin-left: -100px;
	width: 100px;
	height: 1.5em;
	content: "";
}

ul[dir=rtl] li::after, ol[dir=rtl] li::after {
	margin-right: -100px;
}
/* rtl:end:ignore */
